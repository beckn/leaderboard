# This is a basic workflow to help you get started with Actions

name: Scrap GITHUB Data Commit

# Controls when the workflow will run
on:
  schedule:
    - cron: "*/10 * * * *"  # Run the workflow every 15 minutes
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  fetch-data:
    name: Scrape data from GitHub
    runs-on: ubuntu-latest
    permissions:
          issues: read
          pull-requests: read
          contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: github-scrapper  # Replace with the branch you want to checkout

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm i octokit
        
      - name: Scrape GitHub data
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 1
          command: node scripts/pullHistoricalGitHubActivities.js
          on_retry_command: git checkout .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ORG: "beckn"

      - name: Generate markdown files for new contributors
        run: node scripts/generateNewContributors.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_ORG: "beckn"
      
      - name: Check for folder creation
        run: ls -al

      - name: Check for folder creation echo
        run: |
          echo "Listing files in data-repo directory:"
          ls -la data-repo
          echo "Git status before adding files:"
          git status

      - name: Git Status
        run: git status

      - name: Commit changes
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
  
          if [ -n "$(git status --porcelain)" ]; then
            git add data-repo
            git commit -m "üåç Update JSON - $(date -d '+5 hours +30 minutes' +'%d %b %Y | %I:%M %p')"
            git push
          else
            echo "Nothing to commit"
          fi
